const Booking = require("../../models/Booking/Booking");
require("dotenv").config();

// H√†m g·ª≠i email th√¥ng b√°o cho nh√¢n vi√™n
const sendBookingEmail = async (booking) => {
    try {
        const transporter = nodemailer.createTransport({
            service: "gmail",
            auth: {
                user: process.env.EMAIL_USER, // Email nh√¢n vi√™n
                pass: process.env.EMAIL_PASS
            }
        });

        const mailOptions = {
            from: process.env.EMAIL_USER,    // Email nh√¢n vi√™n g·ª≠i ƒëi
            to: process.env.EMAIL_USER,      // Nh·∫≠n email t·ª´ ch√≠nh m√¨nh
            replyTo: process.env.EMAIL_USER, // Khi tr·∫£ l·ªùi, email c≈©ng quay v·ªÅ ch√≠nh h·ªç
            subject: "üõéÔ∏è ƒê·∫∂T TOUR M·ªöI!",
            html: `
                <h2>Th√¥ng tin ƒë·∫∑t tour m·ªõi</h2>
                <p><strong>Kh√°ch h√†ng:</strong> ${booking.name} (${booking.email})</p>
                <p><strong>Tour:</strong> ${booking.tourId}</p>
                <p><strong>Ng√†y kh·ªüi h√†nh:</strong> ${booking.startDate}</p>
                <p><strong>Gi√°:</strong> ${booking.price.toLocaleString()} VND</p>
                <p><strong>S·ªë l∆∞·ª£ng:</strong> ${booking.quantity} ng∆∞·ªùi</p>
            `
        };

        await transporter.sendMail(mailOptions);
        console.log("‚úÖ Email booking ƒë√£ ƒë∆∞·ª£c g·ª≠i cho nh√¢n vi√™n!");
    } catch (error) {
        console.error("‚ùå L·ªói g·ª≠i email:", error);
    }
};
// ƒê·∫∑t tour m·ªõi
const createBooking = async (req, res) => {
    try {
        const newBooking = new Booking(req.body);
        await newBooking.save();
        // G·ª≠i email th√¥ng b√°o cho nh√¢n vi√™n
        await sendBookingEmail(newBooking);
        res.status(201).json(newBooking);
    } catch (error) {
        res.status(400).json({ message: error.message });
    }
};

// L·∫•y t·∫•t c·∫£ booking
const getAllBookings = async (req, res) => {
    try {
        const bookings = await Booking.find().populate("tourId");
        res.status(200).json(bookings);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

// L·∫•y booking theo email ng∆∞·ªùi d√πng
const getBookingsByEmail = async (req, res) => {
    try {
        const { email } = req.params;
        const bookings = await Booking.find({ email }).populate("tourId");
        res.status(200).json(bookings);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

module.exports = { createBooking, getAllBookings, getBookingsByEmail };
